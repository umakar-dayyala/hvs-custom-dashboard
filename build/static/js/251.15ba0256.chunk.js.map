{"version":3,"file":"static/js/251.15ba0256.chunk.js","mappings":"+TAIA,MAwHA,EAxHsBA,IAAyB,IAAxB,eAAEC,GAAgBD,EACrC,MAAME,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAgBD,EAAAA,EAAAA,QAAO,MAEvBE,EAAQJ,GAAkB,CAAC,EAE3BK,GACDD,EAAME,eAAiB,IACvBF,EAAMG,iBAAmB,IACzBH,EAAMI,sBAAwB,IAC9BJ,EAAMK,kBAAoB,GAEzBC,EAC6B,KAA9BN,EAAME,eAAiB,KACtBF,EAAMG,iBAAmB,IAAMH,EAAMI,sBAAwB,KAAQ,GACrC,KAAjCJ,EAAMK,kBAAoB,IACI,KAA9BL,EAAMO,eAAiB,IACU,KAAjCP,EAAMQ,kBAAoB,GA2E/B,OA/CAC,EAAAA,EAAAA,YAAU,KACN,IAAKZ,EAASa,SAAWJ,EAAe,OAGxCT,EAASa,QAAQC,UAAY,GAE7B,MAAMC,EAhCgB,CACtBC,KAAMb,EAAMA,OAAS,gBACrBc,SAAU,CACN,CACID,KAAM,SACNE,MAAOf,EAAME,eAAiB,EAC9BY,SACId,EAAMO,cAAgB,EAChB,CAAC,CAAEM,KAAM,gBAAiBE,MAAOf,EAAMO,gBACvC,IAEd,CACIM,KAAM,WACNE,OAAQf,EAAMG,iBAAmB,IAAMH,EAAMI,sBAAwB,IAEzE,CACIS,KAAM,YACNE,MAAOf,EAAMK,kBAAoB,EACjCS,SACId,EAAMQ,iBAAmB,EACnB,CAAC,CAAEK,KAAM,mBAAoBE,MAAOf,EAAMQ,mBAC1C,MAcZQ,EAAQC,uBAAsB,MAClBC,EAAAA,EAAAA,KACTN,KAAKA,GACLO,MAAM,KACNC,OAAO,KACPC,OAAM,IAAM,KACZC,gBAAe,IAAM,KACrBC,SAAQ,IAAM,OACdC,SAASC,IACF1B,EAAcW,UACVe,GAAQA,EAAKZ,OAASb,EAAMA,MAC5BD,EAAcW,QAAQgB,YAAW,GAAAC,OAAMF,EAAKZ,KAAI,MAAAc,OAAKF,EAAKV,OAE1DhB,EAAcW,QAAQgB,YAAW,UAAAC,OAAa1B,GAEtD,IAEH2B,OAAOC,GACAA,EAAEhB,OAASb,EAAMA,MAAc,2BACpB,WAAX6B,EAAEhB,KAA0B,UACjB,aAAXgB,EAAEhB,KAA4B,oBACnB,cAAXgB,EAAEhB,KAA6B,UACpB,kBAAXgB,EAAEhB,MAAuC,qBAAXgB,EAAEhB,KAAoC,UACjE,sBAGfiB,CAAMjC,EAASa,QAAQ,IAG3B,MAAO,KACHqB,qBAAqBf,GACjBnB,EAASa,UACTb,EAASa,QAAQC,UAAY,GACjC,CACH,GACF,CAACX,KAIAgC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,GAAI,EAAGC,QAAQ,OAAOC,eAAe,SAASC,SAAS,WAAUvB,SACjER,GACG0B,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACK,UAAU,SAAQxB,SAAC,kCAExByB,EAAAA,EAAAA,MAACN,EAAAA,EAAG,CAACI,SAAS,WAAWlB,MAAO,IAAKC,OAAQ,IAAIN,SAAA,EAC7CkB,EAAAA,EAAAA,KAAA,OAAKQ,IAAK3C,KACVmC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACAO,IAAKzC,EACLsC,SAAS,WACTI,IAAI,MACJC,KAAK,MACLC,GAAI,CACAC,UAAW,wBACXC,SAAU,OACVC,WAAY,OACZC,cAAe,OACfT,UAAW,UACbxB,SAAA,UAAAa,OAES1B,SAIrB,E,SC1FC,I,uGCAA,I,2BCAA,IC4BA,IChCf,MACA,EAAe,IAA0B,iECDzC,MACA,EAAe,IAA0B,iE,4BCIzC,MAAM+C,EAAc,CAAC,UAAW,oBAAqB,UAAW,OAgOhE,IA9N2BC,EAAAA,EAAAA,IAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kJAMjBxD,IAAoB,IAAnB,UAAEyD,GAAWzD,EAC/B,MAAM,SAAE0D,IAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAC1BC,GAAWC,EAAAA,EAAAA,OACVC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,IAEzCnD,EAAAA,EAAAA,YAAU,KACR,MAAMoD,EAAgBT,EAAUU,KAAK9D,IAAW,IAAD+D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC7C,MAAMC,GAAsC,QAAxBN,EAAC/D,EAAMsE,yBAAiB,IAAAP,EAAAA,EAAI,IAA2B,QAA1BC,EAAKhE,EAAMuE,uBAAe,IAAAP,EAAAA,EAAI,IAA+B,QAA7BC,EAAIjE,EAAMwE,2BAAmB,IAAAP,EAAAA,EAAI,GAC5G/D,EAAmC,QAAtBgE,EAAGlE,EAAME,qBAAa,IAAAgE,EAAAA,EAAI,EACvCO,EAAiC,QAArBN,EAAGnE,EAAMyE,oBAAY,IAAAN,EAAAA,EAAI,EACrCO,GAAkC,QAAvBN,EAACpE,EAAMK,wBAAgB,IAAA+D,EAAAA,EAAI,GAAK,EACjD,OAAIC,EAAc,EAAU,UACxBK,EAAiB,UACA,IAAjBD,GAAwC,IAAlBvE,EAA4B,oBAC/C,SAAS,IAGlBmD,EAASQ,GACT,MAAMc,EAAWC,aAAY,IAAMjB,GAAakB,GAAYA,EAAU,KAAI,KAC1E,MAAO,IAAMC,cAAcH,EAAS,GACnC,CAACvB,EAAWC,IAKf,OAFA0B,QAAQC,IAAI,kBAAmB5B,IAG7BpB,EAAAA,EAAAA,GAACC,EAAAA,EAAG,CAACC,GAAI,EAAEpB,UACTkB,EAAAA,EAAAA,GAACiD,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG/C,eAAe,SAAQtB,SAChDsC,EAAUU,KAAI,CAAC9D,EAAOoF,KAAW,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC/B,MAAMC,GAA4C,QAA3BT,EAACrF,EAAMI,4BAAoB,IAAAiF,EAAAA,EAAI,IAA2B,QAA1BC,EAAKtF,EAAMG,uBAAe,IAAAmF,EAAAA,EAAI,GAC/EjB,GAAsC,QAAxBkB,EAACvF,EAAMsE,yBAAiB,IAAAiB,EAAAA,EAAI,IAA2B,QAA1BC,EAAKxF,EAAMuE,uBAAe,IAAAiB,EAAAA,EAAI,IAA+B,QAA7BC,EAAIzF,EAAMwE,2BAAmB,IAAAiB,EAAAA,EAAI,GAK5GM,GAFe/F,EAAMyE,aAGzBJ,EAAc,EAAI,MAChBrE,EAAMK,iBAAmB,EAAI,UAC3ByF,EAAiB,GAA6B,IAAxB9F,EAAME,eAA8C,IAAvBF,EAAMyE,aACrD,oBAAsB,WAE1BuB,EAAiC,IAAvBhG,EAAMyE,aAAqBwB,EAAAA,EACzCjG,EAAMsE,kBAAoB,EAAI4B,EAAAA,EAC5BJ,EAAiB,GAA6B,IAAxB9F,EAAME,cAAsB+F,EAAAA,EAAUE,EAAAA,EAE1DC,EAAsC,IAAvBpG,EAAMyE,aAAqB4B,EAAAA,EAC9CrG,EAAMuE,gBAAkB,EAAI+B,EAAAA,EAC1BR,EAAiB,GAA6B,IAAxB9F,EAAME,cAAsBmG,EAAAA,EAAeE,EAAAA,EAE/DC,EAAmC,IAAvBxG,EAAMyE,aAAqBgC,EAAAA,EAC3CzG,EAAMwE,oBAAsB,EAAIkC,EAAAA,EAC9BZ,EAAiB,GAA6B,IAAxB9F,EAAME,cAAsBuG,EAAAA,EAAYE,EAAAA,EAqC5DC,EAAc,CAClB5G,EAAME,eAAiB,EACvB4F,GAAkB,EAClB9F,EAAMK,kBAAoB,EAC1BgE,GAAe,GAGXwC,EAAsC,QAA7BnB,EAAc,QAAdC,EAAG3F,EAAMA,aAAK,IAAA2F,OAAA,EAAXA,EAAamB,qBAAa,IAAApB,EAAAA,EAAI,GAC/BmB,EAAUE,SAAS,QAAmBF,EAAUE,SAAS,OAC7B,KAAX,QAAnBnB,EAAC5F,EAAMyE,oBAAY,IAAAmB,EAAAA,EAAI,KAAaC,EAAC7F,EAAME,eAE1D,OACE8B,EAAAA,EAAAA,GAACiD,EAAAA,GAAI,CAAC+B,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAAIvG,UAC9CkB,EAAAA,EAAAA,GAACsF,EAAAA,EAAM,CAACC,YAAaxB,EAAapD,GAAI,CAAExB,MAAO,OAAQC,OAAQ,QAASN,UACtEyB,EAAAA,EAAAA,IAACN,EAAAA,EAAG,CAACuF,EAAG,EAAGC,gBAAgB,QAAQtF,QAAQ,OAAOuF,cAAc,SAAStG,OAAO,OAAMN,SAAA,EACpFkB,EAAAA,EAAAA,GAAC2F,EAAAA,EAAY,CAACC,QAAQ,SAAS9E,WAAW,OAAO+E,GAAI,EAAE/G,SACpD+F,KAGHtE,EAAAA,EAAAA,IAACN,EAAAA,EACC,CACA6F,QAAUlB,EAAYmB,OAAMC,IAAQA,IAAO,oBAAqB3D,EAAc,EAAI,UAAY,UAC9FzC,MAAM,QACNqG,GAAI,EACJC,GAAI,EACJ9G,OAAQ,GACRe,QAAQ,OACRgG,WAAW,SACX/F,eAAe,gBACfgG,IAAK,EACLlG,GAAI,EACJmG,IAAK,EAAGvH,SAAA,EAGRkB,EAAAA,EAAAA,GAAC2F,EAAAA,EAAY,CAACC,QAAQ,UAAUjF,GAAI,CAAEf,MAAO,SAAUd,SACpDuD,EAAc,EAAC,GAAA1C,OAAM0C,EAAW,oBAAqB,wBAExDrC,EAAAA,EAAAA,GAAA,OAAKsG,IAAKjE,EAAc,EAAIkE,EAAYC,EAAWrH,MAAO,GAAIC,OAAQ,GAAIqH,IAAI,eAIhFzG,EAAAA,EAAAA,GAACC,EAAAA,EAAG,CAACE,QAAQ,OAAOC,eAAe,SAAS+F,WAAW,SAASN,GAAI,EAAGlF,GAAI,CAAEvB,OAAQ,KAAMN,SACxF8F,EAAYmB,OAAMC,IAAQA,KACzBhG,EAAAA,EAAAA,GAAC2F,EAAAA,EAAY,CAACC,QAAQ,SAAShG,MAAM,gBAAgBM,GAAI,EAAEpB,SAAC,qCAI5DyB,EAAAA,EAAAA,IAACN,EAAAA,EAAG,CAACE,QAAQ,OAAOC,eAAe,SAAS+F,WAAW,SAAShH,MAAM,OAAML,SAAA,EAC1EkB,EAAAA,EAAAA,GAAC0G,EAAa,CAAC9I,eAAgBI,KAS/BgC,EAAAA,EAAAA,GAACC,EAAAA,EAAG,CAAC0G,GAAI,EAAE7H,SACR,CAAC,SAAU,WAAY,YAAY,eAAegD,KAAI,CAACzC,EAAOuH,KAC7DrG,EAAAA,EAAAA,IAACN,EAAAA,EAAG,CAACE,QAAQ,OAAOgG,WAAW,SAAqBN,GAAI,EAAE/G,SAAA,EACxDkB,EAAAA,EAAAA,GAACC,EAAAA,EAAG,CAACd,MAAO,GAAIC,OAAQ,GAAIyH,aAAa,MAAMf,QAAS9E,EAAY4F,GAAIE,GAAI,KAC5EvG,EAAAA,EAAAA,IAACoF,EAAAA,EAAY,CAACC,QAAQ,UAAS9G,SAAA,CAAEO,EAAM,KAAIuF,EAAYgC,IAAM,OAFlBvH,aAWvDkB,EAAAA,EAAAA,IAACN,EAAAA,EAAG,CAACE,QAAQ,OAAOC,eAAe,gBAAgB+F,WAAW,SAASjG,GAAG,OAAMpB,SAAA,EAC9EkB,EAAAA,EAAAA,GAACC,EAAAA,EAAG,CAACE,QAAQ,OAAOiG,IAAK,EAAEtH,SACxB,CAACsF,EAAcJ,EAASQ,GAAW1C,KAAI,CAACiF,EAAMH,KAC7CrG,EAAAA,EAAAA,IAACN,EAAAA,EAAG,CAASE,QAAQ,OAAOuF,cAAc,SAASS,WAAW,SAASC,IAAK,GAAItH,SAAA,EAC9EkB,EAAAA,EAAAA,GAAA,OAAKsG,IAAKS,EAAM5H,MAAO,GAAIC,OAAQ,MACnCY,EAAAA,EAAAA,GAAC2F,EAAAA,EAAY,CAACC,QAAQ,UAAUoB,MAAO,CAAElG,WAAY,OAAQlB,MAAO,QAASd,SAC1E,CAACd,EAAMuE,gBAAiBvE,EAAMsE,kBAAmBtE,EAAMwE,qBAAqBoE,IAAM,MAH7EA,QASdrG,EAAAA,EAAAA,IAACN,EAAAA,EAAG,CAACE,QAAQ,OAAOuF,cAAc,MAAMS,WAAW,SAASC,IAAK,EAAEtH,SAAA,EACjEyB,EAAAA,EAAAA,IAACN,EAAAA,EAAG,CAACE,QAAQ,OAAOuF,cAAc,SAASS,WAAW,SAAQrH,SAAA,EAC5DkB,EAAAA,EAAAA,GAAC2F,EAAAA,EAAY,CAACC,QAAQ,UAAUoB,MAAO,CAAElG,WAAY,OAAQlB,MAAO,QAASd,SAAC,WAG9EkB,EAAAA,EAAAA,GAAC2F,EAAAA,EAAY,CAACC,QAAQ,UAAUoB,MAAO,CAAElG,WAAY,OAAQlB,MAAO,QAASd,SAC1Ed,EAAMiJ,iBAGX1G,EAAAA,EAAAA,IAACN,EAAAA,EAAG,CAACE,QAAQ,OAAOuF,cAAc,SAASS,WAAW,SAAQrH,SAAA,EAC5DkB,EAAAA,EAAAA,GAAC2F,EAAAA,EAAY,CAACC,QAAQ,UAAUoB,MAAO,CAAElG,WAAY,OAAQlB,MAAO,QAASd,SAAC,eAG9EkB,EAAAA,EAAAA,GAAC2F,EAAAA,EAAY,CAACC,QAAQ,UAAUoB,MAAO,CAAElG,WAAY,OAAQlB,MAAO,QAASd,SAC1Ed,EAAMkJ,gBAAkB,cAMjClH,EAAAA,EAAAA,GAACmH,EAAAA,EAAa,KACdnH,EAAAA,EAAAA,GAACC,EAAAA,EAAG,CAACE,QAAQ,OAAOC,eAAe,WAAUtB,UAC3CkB,EAAAA,EAAAA,GAACoH,EAAAA,EAAM,CAELxB,QAAQ,YACRjF,GAAI,CACF8E,gBAAiB,UACjB4B,OAAQ,oBACRzH,MAAO,OACP0H,cAAe,QAEjB/H,QAASA,IAnLVvB,IAAUwD,EAAS,mBAAqBxD,GAmLxBuJ,CAAUvJ,EAAMA,OAAOc,SACvC,wBAtG6CsE,EA4G/C,OAIT,G,sECrPV,MAAMoE,GAAavG,EAAAA,EAAAA,IAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4GAUtBsG,GAAiBxG,EAAAA,EAAAA,IAASyG,IAAAA,GAAAvG,EAAAA,EAAAA,GAAA,iFAuEhC,EAjEsBwG,KACpB,MAAOC,EAAUC,IAAejG,EAAAA,EAAAA,WAAS,IAEzCnD,EAAAA,EAAAA,YAAU,KACR,IAAIkE,EAEJ,MAAMmF,EAAYC,UAChB,MACMC,SADaC,EAAAA,EAAAA,OACMC,MACtBC,GACkB,gBAAfA,EAAKC,OAA2BC,OAAOF,EAAKpJ,OAAS,IAE3D8I,EAAYG,EAAY,EAM1B,OAHAF,IACAnF,EAAWC,YAAYkF,EAAW,KAE3B,IAAMhF,cAAcH,EAAS,GACnC,IAEH,MAAM2F,EAAWV,EAAW,iBAAmB,oBAE/C,OACE5H,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFU,GAAI,CACFxB,MAAO,OACPoJ,SAAU,SACVC,WAAY,SACZ/C,gBAAiBmC,EAAW,UAAY,UACxCa,QAAS,MACTpI,SAAU,WACVjB,OAAQ,OACRiI,OAAQO,EAAW,gBAAkB,kBACrCf,aAAc,MACdjH,MAAO,QACPU,UAAW,SACXoI,UAAWd,EAAQ,GAAAjI,OAAM8H,EAAc,gBAAiB,QAExD3I,UAEFkB,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFU,GAAI,CACFR,QAAS,OACThB,MAAO,OACPkB,SAAU,WACVkI,SAAU,UACVzJ,UAEFkB,EAAAA,EAAAA,KAAC2I,EAAAA,EAAU,CACT/C,QAAQ,KACRjF,GAAI,CACFR,QAAS,eACTqI,WAAY,SACZE,UAAU,GAAD/I,OAAK6H,EAAU,wBACxB1G,WAAY,QACZhC,SAEDwJ,OAGD,E,4BCjEV,MAAMM,GAAkBC,EAAAA,EAAAA,IAAG3H,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,giBAgJ3B,EAjH0B2H,KACxB,MAAO1H,EAAW2H,IAAgBnH,EAAAA,EAAAA,UAAS,KACpCoH,EAAmBC,IAAwBrH,EAAAA,EAAAA,UAAS,KACpDsH,EAASC,IAAcvH,EAAAA,EAAAA,WAAS,GACjCJ,GAAWC,EAAAA,EAAAA,OAEjBhD,EAAAA,EAAAA,YAAU,KACR,IACI2K,EADAC,GAAY,EAEZC,GAAc,EAElB,MAAMxB,EAAYC,UACZuB,GACFH,GAAW,GAGb,IACE,MAAMI,QAAiBC,EAAAA,EAAAA,QACJC,EAAAA,EAAAA,SAAQF,EAAUnI,IAEnC2H,EAAaQ,GAEf,MAAM3K,QAAa8K,EAAAA,EAAAA,QACID,EAAAA,EAAAA,SAAQ7K,EAAMoK,IAEnCC,EAAqBrK,EAGzB,CAAE,MAAO+K,GACP5G,QAAQ4G,MAAM,6BAA8BA,EAC9C,CAAC,QACKN,IACEC,IACFH,GAAW,GACXG,GAAc,GAIhBF,EAAUQ,WAAW9B,EAAW,KAEpC,GAKF,OAFAA,IAEO,KACLuB,GAAY,EACZQ,aAAaT,EAAQ,CACtB,GACA,IAWH,OACE7I,EAAAA,EAAAA,MAAAuJ,EAAAA,SAAA,CAAAhL,SAAA,CACGoK,IAAWlJ,EAAAA,EAAAA,KAAC+J,EAAAA,EAAM,KACnBxJ,EAAAA,EAAAA,MAACN,EAAAA,EAAG,CAAC4I,IAAKD,EAAgB9J,SAAA,EAExByB,EAAAA,EAAAA,MAACN,EAAAA,EAAG,CAACI,SAAS,SAASI,IAAK,EAAGuJ,OAAQ,IAAMlE,QAAS,UAAUhH,SAAA,EAY9DkB,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACuF,EAAG,EAAE1G,UAERkB,EAAAA,EAAAA,KAACiK,EAAAA,EAAY,OAGfjK,EAAAA,EAAAA,KAACkK,EAAAA,EAAiB,KAClB3J,EAAAA,EAAAA,MAACN,EAAAA,EAAG,CAACE,QAAQ,OAAOgG,WAAW,SAASF,GAAI,EAAGC,GAAI,EAAGE,IAAK,EAAEtH,SAAA,EAE3DkB,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACkK,SAAU,EAAGC,SAAU,EAAEtL,UAC5BkB,EAAAA,EAAAA,KAAC2H,EAAa,OAGhB3H,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAAAnB,UACFkB,EAAAA,EAAAA,KAACqK,EAAAA,EAAS,CAACjJ,UAAWA,EAAWkJ,YApCrBzF,IACtBrD,EAAS,mBAAD7B,OAAoBkF,GAAY,UAsClC7E,EAAAA,EAAAA,KAACkK,EAAAA,EAAiB,QAGpB3J,EAAAA,EAAAA,MAACN,EAAAA,EAAG,CAACE,QAAQ,OAAOD,GAAI,EAAGwF,cAAc,SAASS,WAAW,SAAQrH,SAAA,EAKnEkB,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACd,MAAM,OAAOe,GAAI,EAAEpB,UACtBkB,EAAAA,EAAAA,KAACuK,EAAU,CAACnJ,UAAWA,OAIzBpB,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,GAAI,YAGZ,C","sources":["components/SunburstChart.js","assets/rJumpToFloor.svg","assets/greyJumpToFloor.svg","assets/greyQRTvechicle.svg","assets/greyLAB.svg","assets/error-circle.svg","assets/check-circle.svg","components/FloorCardsNew.js","components/ScrollingText.js","pages/OperatorsDashboard.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport Sunburst from \"sunburst-chart\";\r\n\r\nconst SunburstChart = ({ floorBasedData }) => {\r\n    const chartRef = useRef(null);\r\n    const centerTextRef = useRef(null);\r\n\r\n    const floor = floorBasedData || {};\r\n\r\n    const totalValue =\r\n        (floor.activeSensors || 0) +\r\n        (floor.inactiveSensors || 0) +\r\n        (floor.disconnected_sensors || 0) +\r\n        (floor.unhealthySensors || 0);\r\n\r\n    const allValuesZero =\r\n        (floor.activeSensors || 0) === 0 &&\r\n        ((floor.inactiveSensors || 0) + (floor.disconnected_sensors || 0)) === 0 &&\r\n        (floor.unhealthySensors || 0) === 0 &&\r\n        (floor.active_alarms || 0) === 0 &&\r\n        (floor.unhealthy_alarms || 0) === 0;\r\n\r\n    const buildSunburstData = () => ({\r\n        name: floor.floor || \"Unknown Floor\",\r\n        children: [\r\n            {\r\n                name: \"Active\",\r\n                value: floor.activeSensors || 0,\r\n                children:\r\n                    floor.active_alarms > 0\r\n                        ? [{ name: \"Active Alarms\", value: floor.active_alarms }]\r\n                        : [],\r\n            },\r\n            {\r\n                name: \"Inactive\",\r\n                value: (floor.inactiveSensors || 0) + (floor.disconnected_sensors || 0),\r\n            },\r\n            {\r\n                name: \"Unhealthy\",\r\n                value: floor.unhealthySensors || 0,\r\n                children:\r\n                    floor.unhealthy_alarms > 0\r\n                        ? [{ name: \"Unhealthy Alarms\", value: floor.unhealthy_alarms }]\r\n                        : [],\r\n            },\r\n        ],\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!chartRef.current || allValuesZero) return;\r\n\r\n        // Clear any old content in the chart container\r\n        chartRef.current.innerHTML = \"\";\r\n\r\n        const data = buildSunburstData();\r\n\r\n        // Defer chart rendering to ensure DOM is ready\r\n        const frame = requestAnimationFrame(() => {\r\n            const chart = Sunburst()\r\n                .data(data)\r\n                .width(120)\r\n                .height(120)\r\n                .label(() => \"\")\r\n                .tooltipContent(() => \"\")\r\n                .onClick(() => null)\r\n                .onHover((node) => {\r\n                    if (centerTextRef.current) {\r\n                        if (node && node.name !== floor.floor) {\r\n                            centerTextRef.current.textContent = `${node.name}: ${node.value}`;\r\n                        } else {\r\n                            centerTextRef.current.textContent = `Total: ${totalValue}`;\r\n                        }\r\n                    }\r\n                })\r\n                .color((d) => {\r\n                    if (d.name === floor.floor) return \"rgba(255, 255, 255, 0.1)\";\r\n                    if (d.name === \"Active\") return \"#29991d\";\r\n                    if (d.name === \"Inactive\") return \"RGB(128, 128,128)\";\r\n                    if (d.name === \"Unhealthy\") return \"#ff9933\";\r\n                    if (d.name === \"Active Alarms\" || d.name === \"Unhealthy Alarms\") return \"#E30613\";\r\n                    return \"rgba(0, 0, 0, 0.1)\";\r\n                });\r\n\r\n            chart(chartRef.current);\r\n        });\r\n\r\n        return () => {\r\n            cancelAnimationFrame(frame);\r\n            if (chartRef.current) {\r\n                chartRef.current.innerHTML = \"\";\r\n            }\r\n        };\r\n    }, [floor]);\r\n\r\n\r\n    return (\r\n        <Box mt={2} display=\"flex\" justifyContent=\"center\" position=\"relative\">\r\n            {allValuesZero ? (\r\n                <Box textAlign=\"center\">No data available to display</Box>\r\n            ) : (\r\n                <Box position=\"relative\" width={120} height={120}>\r\n                    <div ref={chartRef} />\r\n                    <Box\r\n                        ref={centerTextRef}\r\n                        position=\"absolute\"\r\n                        top=\"50%\"\r\n                        left=\"50%\"\r\n                        sx={{\r\n                            transform: \"translate(-50%, -50%)\",\r\n                            fontSize: \"14px\",\r\n                            fontWeight: \"bold\",\r\n                            pointerEvents: \"none\",\r\n                            textAlign: \"center\",\r\n                        }}\r\n                    >\r\n                        {`Total: ${totalValue}`}\r\n                    </Box>\r\n                </Box>\r\n            )}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default SunburstChart;\r\n","var _path;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgRJumpToFloor(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24.602,\n    height: 23.835,\n    viewBox: \"0 0 24.602 23.835\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Union_284\",\n    \"data-name\": \"Union 284\",\n    d: \"M-1759.477-14127.194a.521.521,0,0,1-.519-.519.521.521,0,0,1,.519-.519l4.628.025-.053-2.053a.638.638,0,0,1,.156-.362.464.464,0,0,1,.362-.156h4.652l-.053-2.028a.533.533,0,0,1,.156-.391.479.479,0,0,1,.366-.156l4.677.028-.025-2.105a.5.5,0,0,1,.156-.366.518.518,0,0,1,.362-.156l5.171.028a.522.522,0,0,1,.522.519.522.522,0,0,1-.522.519l-4.652-.024.028,2.105a.515.515,0,0,1-.156.362.516.516,0,0,1-.366.156l-4.624-.053.053,2.027a.532.532,0,0,1-.156.391.476.476,0,0,1-.366.156h-4.677l.053,2.078a.517.517,0,0,1-.156.365.516.516,0,0,1-.366.156Zm.622-1.559a1.356,1.356,0,0,1-.987-1.612l1.612-6.73a2.918,2.918,0,0,1-.7-.675,2.553,2.553,0,0,1-.284-2.312c.181-.729.416-1.691.6-2.444a7.779,7.779,0,0,0-1.247,1.091,5.257,5.257,0,0,0-.753,1.354,1.2,1.2,0,0,1-1.2,1.036,1.221,1.221,0,0,1-1.09-.7c-.494-1.09,1.144-3.172,1.144-3.25a12.144,12.144,0,0,1,2.39-2.027c.053-.025.107-.05.156-.078a6.308,6.308,0,0,1,2.312-.885,2.911,2.911,0,0,1,2.653.781,4.884,4.884,0,0,1,.337.362,11.991,11.991,0,0,0,1.691,1.822,4.635,4.635,0,0,1,.391.337,5.37,5.37,0,0,0,2.053.206,1.205,1.205,0,0,1,1.247,1.094,1.193,1.193,0,0,1-1.119,1.271,8.474,8.474,0,0,1-3.143-.391,1.138,1.138,0,0,1-.444-.284c-.181-.156-.362-.337-.543-.493s-.391-.338-.6-.544l-.675,2.855h.131c3.04.21,3.612,1.848,3.768,3.069,0,0,.231,1.818.465,3.171a1.338,1.338,0,0,1-1.144,1.506.574.574,0,0,1-.206.025,1.336,1.336,0,0,1-1.3-1.144c-.078-.65-.391-2.728-.444-3.168v-.054c-.025-.415-.05-.649-1.3-.753-.181-.028-.362-.028-.572-.053l-1.584,6.6a1.327,1.327,0,0,1-1.3,1.037A1.365,1.365,0,0,1-1758.855-14128.753Zm3.168-17.645a2.394,2.394,0,0,1-1.3-3.125,2.394,2.394,0,0,1,3.125-1.3v0a2.385,2.385,0,0,1,1.293,3.122,2.391,2.391,0,0,1-2.21,1.479A2.372,2.372,0,0,1-1755.687-14146.4Z\",\n    transform: \"translate(1763 14151.001)\",\n    fill: \"#ff1f1f\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgRJumpToFloor);\nexport default __webpack_public_path__ + \"static/media/rJumpToFloor.27d14b20a130d835786d11d463b4c134.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgGreyJumpToFloor(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24.602,\n    height: 23.835,\n    viewBox: \"0 0 24.602 23.835\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Union_283\",\n    \"data-name\": \"Union 283\",\n    d: \"M-1759.477-14127.194a.521.521,0,0,1-.519-.519.521.521,0,0,1,.519-.519l4.628.025-.053-2.053a.638.638,0,0,1,.156-.362.464.464,0,0,1,.362-.156h4.652l-.053-2.028a.533.533,0,0,1,.156-.391.479.479,0,0,1,.366-.156l4.677.028-.025-2.105a.5.5,0,0,1,.156-.366.518.518,0,0,1,.362-.156l5.171.028a.522.522,0,0,1,.522.519.522.522,0,0,1-.522.519l-4.652-.024.028,2.105a.515.515,0,0,1-.156.362.516.516,0,0,1-.366.156l-4.624-.053.053,2.027a.532.532,0,0,1-.156.391.476.476,0,0,1-.366.156h-4.677l.053,2.078a.517.517,0,0,1-.156.365.516.516,0,0,1-.366.156Zm.622-1.559a1.356,1.356,0,0,1-.987-1.612l1.612-6.73a2.918,2.918,0,0,1-.7-.675,2.553,2.553,0,0,1-.284-2.312c.181-.729.416-1.691.6-2.444a7.779,7.779,0,0,0-1.247,1.091,5.257,5.257,0,0,0-.753,1.354,1.2,1.2,0,0,1-1.2,1.036,1.221,1.221,0,0,1-1.09-.7c-.494-1.09,1.144-3.172,1.144-3.25a12.144,12.144,0,0,1,2.39-2.027c.053-.025.107-.05.156-.078a6.308,6.308,0,0,1,2.312-.885,2.911,2.911,0,0,1,2.653.781,4.884,4.884,0,0,1,.337.362,11.991,11.991,0,0,0,1.691,1.822,4.635,4.635,0,0,1,.391.337,5.37,5.37,0,0,0,2.053.206,1.205,1.205,0,0,1,1.247,1.094,1.193,1.193,0,0,1-1.119,1.271,8.474,8.474,0,0,1-3.143-.391,1.138,1.138,0,0,1-.444-.284c-.181-.156-.362-.337-.543-.493s-.391-.338-.6-.544l-.675,2.855h.131c3.04.21,3.612,1.848,3.768,3.069,0,0,.231,1.818.465,3.171a1.338,1.338,0,0,1-1.144,1.506.574.574,0,0,1-.206.025,1.336,1.336,0,0,1-1.3-1.144c-.078-.65-.391-2.728-.444-3.168v-.054c-.025-.415-.05-.649-1.3-.753-.181-.028-.362-.028-.572-.053l-1.584,6.6a1.327,1.327,0,0,1-1.3,1.037A1.365,1.365,0,0,1-1758.855-14128.753Zm3.168-17.645a2.394,2.394,0,0,1-1.3-3.125,2.394,2.394,0,0,1,3.125-1.3v0a2.385,2.385,0,0,1,1.293,3.122,2.391,2.391,0,0,1-2.21,1.479A2.372,2.372,0,0,1-1755.687-14146.4Z\",\n    transform: \"translate(1763 14151.001)\",\n    fill: \"#6d6d6d\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgGreyJumpToFloor);\nexport default __webpack_public_path__ + \"static/media/greyJumpToFloor.9f4365b3adac9c1c9bcab209639bb0d0.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgGreyQrTvechicle(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 23.181,\n    height: 22.967,\n    viewBox: \"0 0 23.181 22.967\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Path_85682\",\n    \"data-name\": \"Path 85682\",\n    d: \"M24.554,13.652a2.434,2.434,0,0,0-2.383-1.927H11.01a2.434,2.434,0,0,0-2.383,1.927L7.576,18.593h18.03ZM8.864,17.735l.622-3.589a1.885,1.885,0,0,1,1.854-1.563h10.5A1.885,1.885,0,0,1,23.7,14.146l.622,3.589ZM8.825,28.467h-2.5A.468.468,0,0,1,5.859,28V26.32H9.293V28a.468.468,0,0,1-.468.468Zm18.03,0h-2.5A.468.468,0,0,1,23.888,28V26.32h3.434V28a.468.468,0,0,1-.468.468ZM25.4,19.022H7.8a2.352,2.352,0,0,0-2.37,2.352v2.8h8.156v-.588a1.129,1.129,0,0,1,1.129-1.129h3.752A1.129,1.129,0,0,1,19.6,23.586v.588h8.156v-2.8A2.352,2.352,0,0,0,25.4,19.022ZM8.657,22.886H6.511a.644.644,0,0,1,0-1.288H8.657a.644.644,0,0,1,0,1.288Zm18.03,0H24.541a.644.644,0,0,1,0-1.288h2.146a.644.644,0,0,1,0,1.288Zm1.193,3H5.309A.309.309,0,0,1,5,25.582v-.67a.309.309,0,0,1,.309-.309H27.872a.309.309,0,0,1,.309.309v.67a.309.309,0,0,1-.309.309ZM16.376,9.578V11.3H12.727a.859.859,0,0,1,0-1.717Zm4.937.859a.859.859,0,0,1-.859.859H16.805V9.578h3.649A.859.859,0,0,1,21.313,10.437ZM16.591,8.5a.215.215,0,0,1-.215-.215V5.715a.215.215,0,1,1,.429,0V8.29A.215.215,0,0,1,16.591,8.5Zm1.769-.052a.215.215,0,0,1-.15-.365l1.816-1.824a.216.216,0,0,1,.3.3l-1.824,1.82A.2.2,0,0,1,18.359,8.453Zm-3.537,0a.2.2,0,0,1-.15-.064L12.847,6.573a.219.219,0,1,1,.309-.309l1.82,1.824a.215.215,0,0,1-.15.365Z\",\n    transform: \"translate(-5 -5.5)\",\n    fill: \"#6d6d6d\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgGreyQrTvechicle);\nexport default __webpack_public_path__ + \"static/media/greyQRTvechicle.852d6461d779fd0a8c93a10e8b73c9e1.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgGreyLab(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24.418,\n    height: 23.655,\n    viewBox: \"0 0 24.418 23.655\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group_32391\",\n    \"data-name\": \"Group 32391\",\n    transform: \"translate(-4700.502 -1038.847)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Path_85670\",\n    \"data-name\": \"Path 85670\",\n    d: \"M17.079,47.5a5.952,5.952,0,0,0-2.422-1.432.381.381,0,1,1,.17-.743,6.572,6.572,0,0,1,2.775,1.62.381.381,0,0,1,.016.539c-.075.08-.239.173-.54.016Z\",\n    transform: \"translate(4703.693 1003.834)\",\n    fill: \"#6d6d6d\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Path_85671\",\n    \"data-name\": \"Path 85671\",\n    d: \"M65.971,28.125a.381.381,0,0,1,.382.382v2L64.78,33.394c-.07.127-.172.244-.518.152a.382.382,0,0,1-.153-.518l1.479-2.711v-1.81a.381.381,0,0,1,.382-.382Z\",\n    transform: \"translate(4642.927 1016.828)\",\n    fill: \"#6d6d6d\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Path_85672\",\n    \"data-name\": \"Path 85672\",\n    d: \"M7.813,61.661a5.668,5.668,0,0,1,.368-2.016.382.382,0,0,1,.406-.243,4.643,4.643,0,0,1,1.3.422,2.624,2.624,0,0,0,1.035.311,2.368,2.368,0,0,0,1.044-.313,3.394,3.394,0,0,1,3.378,0,2.368,2.368,0,0,0,1.044.313,1.908,1.908,0,0,0,.9-.3A3.481,3.481,0,0,1,18.48,59.4a.38.38,0,0,1,.41.242,5.664,5.664,0,0,1,.368,2.016,5.723,5.723,0,0,1-8.584,4.956A6.165,6.165,0,0,1,8.839,64.93a5.686,5.686,0,0,1-1.026-3.271Zm7.63,1.908a.763.763,0,1,0-.763-.763A.764.764,0,0,0,15.443,63.569Zm-3.624,1.145a.954.954,0,1,0-.954-.954A.955.955,0,0,0,11.819,64.713Z\",\n    transform: \"translate(4703.755 993.211)\",\n    fill: \"#6d6d6d\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Path_85673\",\n    \"data-name\": \"Path 85673\",\n    d: \"M.529,20.794l5.577-9.759V5.763a1.3,1.3,0,0,1-1.145-1.3,1.345,1.345,0,0,1,.39-.945,1.327,1.327,0,0,1,.945-.39h4.158a1.358,1.358,0,0,1,1.37,1.232,1.282,1.282,0,0,1-.409,1.062,1.48,1.48,0,0,1-.733.343v5.273l.712,1.247a.382.382,0,1,1-.663.379l-.814-1.422V5.8H8.394a.382.382,0,0,1,0-.763H10.3a.9.9,0,0,0,.6-.181.514.514,0,0,0,.159-.391.573.573,0,0,0-.572-.572H6.3a.57.57,0,0,0-.572.572c0,.361.273.568.75.572a.385.385,0,0,1,.395.378v5.828L1.191,21.172A3.2,3.2,0,0,0,1.6,24.93a3.463,3.463,0,0,0,2.571,1.085H12.79a3.273,3.273,0,0,0,.574-.056,7.563,7.563,0,0,1-1.616-1.088H4.071a2.153,2.153,0,0,1-1.89-1.055,2.106,2.106,0,0,1,0-2.075l3.193-5.589a.385.385,0,0,1,.456-.172,10.112,10.112,0,0,1,.981.391,4.2,4.2,0,0,0,1.778.488,2.484,2.484,0,0,0,.982-.195A7.617,7.617,0,0,1,14.5,11.876V8.433a1.3,1.3,0,0,1-1.145-1.3,1.345,1.345,0,0,1,.39-.945,1.327,1.327,0,0,1,.945-.39h4.158a1.358,1.358,0,0,1,1.37,1.232,1.282,1.282,0,0,1-.409,1.062,1.48,1.48,0,0,1-.733.343v3.444A7.627,7.627,0,0,1,17.666,26.73a8.084,8.084,0,0,1-.882.05,7.536,7.536,0,0,1-2.329-.371,3.941,3.941,0,0,1-1.665.369H4A4,4,0,0,1,.528,20.793ZM4.771,21.82a.572.572,0,1,0,.572.572A.573.573,0,0,0,4.771,21.82ZM7.06,19.149a.954.954,0,1,0,.954.954A.955.955,0,0,0,7.06,19.149Zm7.495,6.5A6.864,6.864,0,1,0,18.6,12.532a.382.382,0,0,1-.281-.368V8.084A.381.381,0,0,1,18.7,7.7a.9.9,0,0,0,.6-.181.514.514,0,0,0,.159-.391.573.573,0,0,0-.572-.572h-4.2a.57.57,0,0,0-.572.572c0,.363.279.572.763.572h1.526a.382.382,0,0,1,0,.763H15.262v3.7a.381.381,0,0,1-.282.368,6.859,6.859,0,0,0-2.832,11.678,6.785,6.785,0,0,0,2.406,1.435Z\",\n    transform: \"translate(4700.502 1035.723)\",\n    fill: \"#6d6d6d\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Path_85674\",\n    \"data-name\": \"Path 85674\",\n    d: \"M28.125,41.008a.382.382,0,0,0,.763,0,.382.382,0,0,0-.763,0\",\n    transform: \"translate(4689.166 1007.379)\",\n    fill: \"#6d6d6d\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgGreyLab);\nexport default __webpack_public_path__ + \"static/media/greyLAB.040a45bf62dd9024685ab24793f8b48a.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgErrorCircle(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    fill: \"#ffffff\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 0C5.371 0 0 5.371 0 12s5.371 12 12 12 12-5.371 12-12S18.629 0 12 0zm5.656 16.242l-1.414 1.414L12 13.414l-4.242 4.242-1.414-1.414L10.586 12 6.344 7.758l1.414-1.414L12 10.586l4.242-4.242 1.414 1.414L13.414 12l4.242 4.242z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgErrorCircle);\nexport default __webpack_public_path__ + \"static/media/error-circle.3d3836db033f450ead848c757575a2e1.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgCheckCircle(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    fill: \"#ffffff\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 0C5.375 0 0 5.375 0 12s5.375 12 12 12 12-5.375 12-12S18.625 0 12 0zm-1.2 17.3l-4.6-4.6 1.6-1.6 3 3 6.6-6.6 1.6 1.6-8.2 8.2z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheckCircle);\nexport default __webpack_public_path__ + \"static/media/check-circle.a00dec72d85bc80bcefd824feff8d133.svg\";\nexport { ForwardRef as ReactComponent };","/** @jsxImportSource @emotion/react */\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { Box, Grid, Button } from \"@mui/material\";\r\nimport { HvCard, HvTypography } from \"@hitachivantara/uikit-react-core\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { MyContext } from \"../context/MyContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { keyframes } from \"@emotion/react\";\r\nimport SunburstChart from  \"../components/SunburstChart\";\r\n// Icons\r\nimport totalZoneIcon from \"../assets/greyDirection.svg\";\r\nimport floorIcon from \"../assets/rJumpToFloor.svg\";\r\nimport gChemical from \"../assets/gChemical.svg\";\r\nimport gBiological from \"../assets/gBiological.svg\";\r\nimport gRadiation from \"../assets/gRadiological.svg\";\r\nimport alertChemical from \"../assets/rChemical.svg\";\r\nimport alertBiological from \"../assets/rBiological.svg\";\r\nimport alertRadiation from \"../assets/rRadiological.svg\";\r\nimport greyBio from \"../assets/greyBio.svg\";\r\nimport greyChemical from \"../assets/greyChem.svg\";\r\nimport greyRadio from \"../assets/greyRadio.svg\";\r\nimport greyFloorIcon from \"../assets/greyJumpToFloor.svg\";\r\nimport unhealthyBio from \"../assets/aBiological.svg\";\r\nimport unhealthyChemical from \"../assets/aChemical.svg\";\r\nimport unhealthyRadio from \"../assets/aRadiological.svg\";\r\nimport qrtIcon from \"../assets/greyQRTvechicle.svg\";\r\nimport labIcon from \"../assets/greyLAB.svg\";\r\nimport errorIcon from \"../assets/error-circle.svg\";\r\nimport checkIcon from \"../assets/check-circle.svg\";\r\nimport Horizontaldiv from \"../components/HorizontalDivider\";\r\n\r\nconst chartColors = [\"#29991d\", \"RGB(128, 128,128)\", \"#ff9933\", \"red\"];\r\n\r\nconst zoomBlinkAnimation = keyframes`\r\n  0% { transform: scale(1); opacity: 1; }\r\n  50% { transform: scale(0.8); opacity: 0.5; }\r\n  100% { transform: scale(1); opacity: 1; }\r\n`;\r\n\r\nconst FloorCards = ({ floorData }) => {\r\n  const { setValue } = useContext(MyContext);\r\n  const navigate = useNavigate();\r\n  const [chartKey, setChartKey] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const updatedColors = floorData.map((floor) => {\r\n      const totalAlarms = (floor.biological_alarms ?? 0) + (floor.chemical_alarms ?? 0) + (floor.radiological_alarms ?? 0);\r\n      const activeSensors = floor.activeSensors ?? 0;\r\n      const totalSensors = floor.totalSensors ?? 0;\r\n      const hasAlert = (floor.unhealthySensors ?? 0) > 0;\r\n      if (totalAlarms > 0) return \"#E30613\";\r\n      if (hasAlert) return \"#ff9933\";\r\n      if (totalSensors === 0 || activeSensors === 0) return \"RGB(128, 128,128)\";\r\n      return \"#28A745\";\r\n    });\r\n\r\n    setValue(updatedColors);\r\n    const interval = setInterval(() => setChartKey((prevKey) => prevKey + 1), 20000);\r\n    return () => clearInterval(interval);\r\n  }, [floorData, setValue]);\r\n\r\n  const goToFloor = (floor) => navigate(\"floorwise?floor=\" + floor);\r\n  console.log(\"Floor new Data:\", floorData);\r\n\r\n  return (\r\n    <Box mt={2}>\r\n      <Grid container spacing={4} justifyContent=\"center\">\r\n        {floorData.map((floor, index) => {\r\n          const inActiveSensor = (floor.disconnected_sensors ?? 0) + (floor.inactiveSensors ?? 0);\r\n          const totalAlarms = (floor.biological_alarms ?? 0) + (floor.chemical_alarms ?? 0) + (floor.radiological_alarms ?? 0);\r\n          // const totalSensors = (floor.activeSensors ?? 0) + inActiveSensor + (floor.unhealthySensors ?? 0);\r\n          //const totalSensors = (floor.totalSensors ?? 0) + inActiveSensor;\r\n          const totalSensors = floor.totalSensors;\r\n\r\n          const borderColor =\r\n            totalAlarms > 0 ? \"red\" :\r\n              floor.unhealthySensors > 0 ? \"#ff9933\" :\r\n                inActiveSensor > 0 || floor.activeSensors === 0 || floor.totalSensors === 0\r\n                  ? \"RGB(128, 128,128)\" : \"#29991d\";\r\n\r\n          const bioIcon = floor.totalSensors === 0 ? greyBio :\r\n            floor.biological_alarms > 0 ? alertBiological :\r\n              inActiveSensor > 0 || floor.activeSensors === 0 ? greyBio : gBiological;\r\n\r\n          const chemicalIcon = floor.totalSensors === 0 ? greyChemical :\r\n            floor.chemical_alarms > 0 ? alertChemical :\r\n              inActiveSensor > 0 || floor.activeSensors === 0 ? greyChemical : gChemical;\r\n\r\n          const radioIcon = floor.totalSensors === 0 ? greyRadio :\r\n            floor.radiological_alarms > 0 ? alertRadiation :\r\n              inActiveSensor > 0 || floor.activeSensors === 0 ? greyRadio : gRadiation;\r\n\r\n          const chartOptions = {\r\n            chart: { type: \"donut\", toolbar: { show: false }, animations: { enabled: true } },\r\n            labels: [\"Active\", \"Inactive\", \"Unhealthy\", \"CBRN Alarms\"],\r\n            legend: { show: false },\r\n            colors: chartColors,\r\n            dataLabels: {\r\n              enabled: true,\r\n              formatter: (val, { seriesIndex }) => {\r\n                const sensorCounts = [\r\n                  floor.activeSensors ||0,\r\n                  inActiveSensor || 0,\r\n                  floor.unhealthySensors || 0,\r\n                  totalAlarms || 0,\r\n                ];\r\n                return sensorCounts[seriesIndex] || 0;\r\n              },\r\n            },\r\n            plotOptions: {\r\n              pie: {\r\n                donut: {\r\n                  size: \"65%\",\r\n                  labels: {\r\n                    show: true,\r\n                    total: {\r\n                      show: true,\r\n                      label: \"Total\",\r\n                      fontSize: \"14px\",\r\n                      formatter: () => `${totalSensors}`,\r\n                    },\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          };\r\n\r\n          const chartSeries = [\r\n            floor.activeSensors || 0,\r\n            inActiveSensor || 0,\r\n            floor.unhealthySensors || 0,\r\n            totalAlarms || 0,\r\n          ];\r\n\r\n          const floorName = floor.floor?.toUpperCase() ?? \"\";\r\n          const baseIcon = floorName.includes(\"QRT\") ? qrtIcon : floorName.includes(\"LAB\") ? labIcon : floorIcon;\r\n          const isGrey = (floor.totalSensors ?? 0) === 0 || ((floor.activeSensors ?? 0) === 0 && inActiveSensor > 0);\r\n\r\n          return (\r\n            <Grid item xs={12} sm={6} md={4} lg={3} xl={2.4} key={index}>\r\n              <HvCard statusColor={borderColor} sx={{ width: \"100%\", height: \"100%\" }}>\r\n                <Box p={2} backgroundColor=\"white\" display=\"flex\" flexDirection=\"column\" height=\"100%\">\r\n                  <HvTypography variant=\"title3\" fontWeight=\"bold\" mb={1}>\r\n                    {floorName}\r\n                  </HvTypography>\r\n\r\n                  <Box\r\n                    // bgcolor={totalAlarms > 0 ? \"#E30613\" : \"#28A745\"}\r\n                    bgcolor={ chartSeries.every(val => !val) ? \"RGB(128, 128,128)\": totalAlarms > 0 ? \"#E30613\" : \"#28A745\"}\r\n                    color=\"white\"\r\n                    px={2}\r\n                    py={1}\r\n                    height={60}\r\n                    display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"space-between\"\r\n                    gap={1}\r\n                    mt={2}\r\n                    mx={-2} // cancel horizontal padding\r\n\r\n                  >\r\n                    <HvTypography variant=\"caption\" sx={{ color: \"white\" }}>\r\n                      {totalAlarms > 0 ? `${totalAlarms} alarms detected` : \"No alarms detected\"}\r\n                    </HvTypography>\r\n                    <img src={totalAlarms > 0 ? errorIcon : checkIcon} width={16} height={16} alt=\"status\" />\r\n                  </Box>\r\n\r\n\r\n                  <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" mb={2} sx={{ height: 160 }}>\r\n                    {chartSeries.every(val => !val) ? (\r\n                      <HvTypography variant=\"title4\" color=\"textSecondary\" mt={5}>\r\n                        No sensors available to display\r\n                      </HvTypography>\r\n                    ) : (\r\n                      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" width=\"100%\">\r\n                        <SunburstChart floorBasedData={floor}/>\r\n                        {/* <ReactApexChart\r\n                          key={chartKey}\r\n                          options={chartOptions}\r\n                          series={chartSeries}\r\n                          type=\"donut\"\r\n                          width={140}\r\n                          height={140}\r\n                        />*/}\r\n                        <Box ml={2}>\r\n                          {[\"Active\", \"Inactive\", \"Unhealthy\",\"CBRN Alarms\"].map((label, i) => (\r\n                            <Box display=\"flex\" alignItems=\"center\" key={label} mb={1}>\r\n                              <Box width={12} height={12} borderRadius=\"50%\" bgcolor={chartColors[i]} mr={1} />\r\n                              <HvTypography variant=\"caption\">{label}: {(chartSeries[i] || 0)}</HvTypography>\r\n                            </Box>\r\n                          ))}\r\n                        </Box>\r\n                      </Box>\r\n                    )}\r\n                  </Box>\r\n\r\n\r\n                  <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mt=\"auto\" >\r\n                    <Box display=\"flex\" gap={4}>\r\n                      {[chemicalIcon, bioIcon, radioIcon].map((icon, i) => (\r\n                        <Box key={i} display=\"flex\" flexDirection=\"column\" alignItems=\"center\" gap={0.5}>\r\n                          <img src={icon} width={20} height={20} />\r\n                          <HvTypography variant=\"caption\" style={{ fontWeight: 'bold', color: '#000' }}>\r\n                            {[floor.chemical_alarms, floor.biological_alarms, floor.radiological_alarms][i] || 0}\r\n                          </HvTypography>\r\n                        </Box>\r\n                      ))}\r\n                    </Box>\r\n\r\n                    <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\" gap={5}>\r\n                      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n                        <HvTypography variant=\"caption\" style={{ fontWeight: 'bold', color: '#000' }}>\r\n                          Zones\r\n                        </HvTypography>\r\n                        <HvTypography variant=\"caption\" style={{ fontWeight: 'bold', color: '#000' }}>\r\n                          {floor.totalZones}\r\n                        </HvTypography>\r\n                      </Box>\r\n                      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n                        <HvTypography variant=\"caption\" style={{ fontWeight: 'bold', color: '#000' }}>\r\n                          Locations\r\n                        </HvTypography>\r\n                        <HvTypography variant=\"caption\" style={{ fontWeight: 'bold', color: '#000' }}>\r\n                          {floor.total_location || 0}\r\n                        </HvTypography>\r\n                      </Box>\r\n                    </Box>\r\n\r\n                  </Box>\r\n                  <Horizontaldiv />\r\n                  <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                    <Button\r\n\r\n                      variant=\"contained\"\r\n                      sx={{\r\n                        backgroundColor: \"#0073E7\",\r\n                        border: \"1px solid #146BD2\",\r\n                        color: \"#fff\",\r\n                        textTransform: \"none\",\r\n                      }}\r\n                      onClick={() => goToFloor(floor.floor)}\r\n                    >\r\n                      Go to Floor\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n              </HvCard>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FloorCards;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport { keyframes } from \"@emotion/react\";\r\nimport { getSensorData } from \"../service/summaryServices\";\r\n\r\n// Define the scrolling animation\r\nconst scrollText = keyframes`\r\n  0% {\r\n    transform: translateX(100vw);\r\n  }\r\n  100% {\r\n    transform: translateX(-100%);\r\n  }\r\n`;\r\n\r\n// Define the blinking animation for alarms and normal state\r\nconst blinkAnimation = keyframes`\r\n  0% { opacity: 1; }\r\n  30% { opacity: 0.5; }\r\n  100% { opacity: 1; }\r\n`;\r\n\r\nconst ScrollingText = () => {\r\n  const [hasAlarm, setHasAlarm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n\r\n    const fetchData = async () => {\r\n      const data = await getSensorData();\r\n      const alarmExists = data.some(\r\n        (card) =>\r\n            card.title === \"CBRN Alarms\" && Number(card.value) > 0\r\n      );\r\n      setHasAlarm(alarmExists);\r\n    };\r\n\r\n    fetchData(); // Initial call\r\n    interval = setInterval(fetchData, 5000); // Fetch every 5 seconds\r\n\r\n    return () => clearInterval(interval); // Cleanup on unmount\r\n  }, []);\r\n\r\n  const fullText = hasAlarm ? \"Alarm Detected\" : \"No Alarm Detected\";\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: \"100%\",\r\n        overflow: \"hidden\",\r\n        whiteSpace: \"nowrap\",\r\n        backgroundColor: hasAlarm ? \"#E30613\" : \"#008000\", // Red for alarm, Green for no alarm\r\n        padding: \"8px\",\r\n        position: \"relative\",\r\n        height: \"48px\", \r\n        border: hasAlarm ? \"2px solid red\" : \"2px solid green\", // Red border for alarm, Green for no alarm\r\n        borderRadius: \"5px\",\r\n        color: \"white\", // Text is always white\r\n        textAlign: \"center\",\r\n        animation: hasAlarm ? `${blinkAnimation} 1s infinite` : \"none\", // Only blink on alarm\r\n        // marginTop: \"10px\",\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          width: \"100%\",\r\n          position: \"relative\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"h6\"\r\n          sx={{\r\n            display: \"inline-block\",\r\n            whiteSpace: \"nowrap\",\r\n            animation: `${scrollText} 25s linear infinite`,\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          {fullText}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ScrollingText;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport { HvTypography } from \"@hitachivantara/uikit-react-core\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport FloorTabs from \"../components/FloorTabs\";\r\n// import FloorCards from \"../components/FloorCards\";\r\nimport FloorCards from \"../components/FloorCardsNew\";\r\nimport SensorStatusCards from \"../components/SensorStatusCards\";\r\nimport { floorList, summaryData } from \"../service/summaryServices\";\r\nimport Breadcrumbs from \"../components/Breadcrumbs\";\r\nimport SensorLegend from \"../components/SensorLegend\";\r\nimport HorizontalDivider from \"../components/HorizontalDivider\";\r\nimport { css } from \"@emotion/react\";\r\nimport Loader from \"../components/Loader\"; // importing the loader from the component \r\nimport ScrollingText from \"../components/ScrollingText\";\r\nimport { isEqual } from \"lodash\";\r\nimport SummaryCards from \"../components/SummaryCards\";\r\n\r\nconst scrollContainer = css`\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n\r\n  &:hover {\r\n    overflow: auto;\r\n  }\r\n\r\n  /* Hide scrollbar in Firefox */\r\n  scrollbar-width: none;\r\n  /* Hide scrollbar in IE and Edge */\r\n  -ms-overflow-style: none;\r\n\r\n  /* Hide scrollbar in WebKit browsers */\r\n  &::-webkit-scrollbar {\r\n    width: 0px;\r\n  }\r\n\r\n  /* Show scrollbar on hover */\r\n  &:hover::-webkit-scrollbar {\r\n    width: 8px;\r\n  }\r\n\r\n  &:hover::-webkit-scrollbar-thumb {\r\n    background: #d3d3d3;\r\n    border-radius: 4px;\r\n  }\r\n`;\r\n\r\nconst OperatorDashboard = () => {\r\n  const [floorData, setFloorData] = useState([]);\r\n  const [sensorSummaryData, setSensorSummaryData] = useState([]);\r\n  const [loading, setLoading] = useState(true);  // adding the load state \r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    let timeout;\r\n    let isFirstLoad = true;\r\n\r\n    const fetchData = async () => {\r\n      if (isFirstLoad) {\r\n        setLoading(true);\r\n      }\r\n\r\n      try {\r\n        const response = await floorList();\r\n        const isChanged = !isEqual(response, floorData);\r\n        if (isChanged) {\r\n          setFloorData(response);\r\n        }\r\n        const data = await summaryData();\r\n        const isDataChanged = !isEqual(data, sensorSummaryData);\r\n        if (isDataChanged) {\r\n          setSensorSummaryData(data);\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error(\"Error fetching floor data:\", error);\r\n      } finally {\r\n        if (isMounted) {\r\n          if (isFirstLoad) {\r\n            setLoading(false);\r\n            isFirstLoad = false;\r\n          }\r\n\r\n          // Wait 500ms AFTER the response finishes before next call\r\n          timeout = setTimeout(fetchData, 500);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchData(); // Initial fetch\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      clearTimeout(timeout);\r\n    };\r\n  }, []);\r\n\r\n\r\n\r\n  // Function to handle tab click\r\n  const handleTabClick = (floorName) => {\r\n    navigate(`floorwise?floor=${floorName}`);\r\n  };\r\n\r\n\r\n  // console.log(floorData);\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n      <Box css={scrollContainer}>\r\n        {/* Sticky Header Section */}\r\n        <Box position=\"sticky\" top={0} zIndex={1000} bgcolor={\"#f0f1f6\"}>\r\n          {/* Breadcrumbs and Toggle Section */}\r\n          {/* <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" p={1}>\r\n                <Breadcrumbs />\r\n                <Box display=\"flex\">\r\n                    <SensorLegend />\r\n                </Box>\r\n                </Box> */}\r\n\r\n          {/* <HorizontalDivider /> */}\r\n\r\n          {/* Sensor Status Cards */}\r\n          <Box p={1}>\r\n            {/* <SensorStatusCards /> */}\r\n            <SummaryCards />\r\n          </Box>\r\n\r\n          <HorizontalDivider />\r\n          <Box display=\"flex\" alignItems=\"center\" px={2} py={1} gap={2}>\r\n            {/* Scrolling text takes up all remaining width */}\r\n            <Box flexGrow={1} minWidth={0}>\r\n              <ScrollingText />\r\n            </Box>\r\n            {/* FloorTabs container scrolls horizontally if needed */}\r\n            <Box>\r\n              <FloorTabs floorData={floorData} onTabChange={handleTabClick} />\r\n            </Box>\r\n          </Box>\r\n          <HorizontalDivider />\r\n        </Box>\r\n\r\n        <Box display=\"flex\" mt={2} flexDirection=\"column\" alignItems=\"center\">\r\n          {/* Pass floorData to FloorTabs */}\r\n\r\n\r\n          {/* Pass floorData to FloorCards */}\r\n          <Box width=\"100%\" mt={2}>\r\n            <FloorCards floorData={floorData} />\r\n          </Box>\r\n\r\n          {/* Add Bottom Gap */}\r\n          <Box mt={1} />\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OperatorDashboard;\r\n"],"names":["_ref","floorBasedData","chartRef","useRef","centerTextRef","floor","totalValue","activeSensors","inactiveSensors","disconnected_sensors","unhealthySensors","allValuesZero","active_alarms","unhealthy_alarms","useEffect","current","innerHTML","data","name","children","value","frame","requestAnimationFrame","Sunburst","width","height","label","tooltipContent","onClick","onHover","node","textContent","concat","color","d","chart","cancelAnimationFrame","_jsx","Box","mt","display","justifyContent","position","textAlign","_jsxs","ref","top","left","sx","transform","fontSize","fontWeight","pointerEvents","chartColors","keyframes","_templateObject","_taggedTemplateLiteral","floorData","setValue","useContext","MyContext","navigate","useNavigate","chartKey","setChartKey","useState","updatedColors","map","_floor$biological_ala","_floor$chemical_alarm","_floor$radiological_a","_floor$activeSensors","_floor$totalSensors","_floor$unhealthySenso","totalAlarms","biological_alarms","chemical_alarms","radiological_alarms","totalSensors","hasAlert","interval","setInterval","prevKey","clearInterval","console","log","Grid","container","spacing","index","_floor$disconnected_s","_floor$inactiveSensor","_floor$biological_ala2","_floor$chemical_alarm2","_floor$radiological_a2","_floor$floor$toUpperC","_floor$floor","_floor$totalSensors2","_floor$activeSensors2","inActiveSensor","borderColor","bioIcon","greyBio","alertBiological","gBiological","chemicalIcon","greyChemical","alertChemical","gChemical","radioIcon","greyRadio","alertRadiation","gRadiation","chartSeries","floorName","toUpperCase","includes","item","xs","sm","md","lg","xl","HvCard","statusColor","p","backgroundColor","flexDirection","HvTypography","variant","mb","bgcolor","every","val","px","py","alignItems","gap","mx","src","errorIcon","checkIcon","alt","SunburstChart","ml","i","borderRadius","mr","icon","style","totalZones","total_location","Horizontaldiv","Button","border","textTransform","goToFloor","scrollText","blinkAnimation","_templateObject2","ScrollingText","hasAlarm","setHasAlarm","fetchData","async","alarmExists","getSensorData","some","card","title","Number","fullText","overflow","whiteSpace","padding","animation","Typography","scrollContainer","css","OperatorDashboard","setFloorData","sensorSummaryData","setSensorSummaryData","loading","setLoading","timeout","isMounted","isFirstLoad","response","floorList","isEqual","summaryData","error","setTimeout","clearTimeout","_Fragment","Loader","zIndex","SummaryCards","HorizontalDivider","flexGrow","minWidth","FloorTabs","onTabChange","FloorCards"],"sourceRoot":""}